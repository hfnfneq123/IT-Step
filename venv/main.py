class BankAccount:
    def __init__(self, owner_name, account_number, balance=0.0):
        self.owner_name = owner_name
        self.account_number = account_number
        self.balance = balance

    def deposit(self, amount):
        """–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É"""
        if amount > 0:
            self.balance += amount
            print(f"‚úÖ {self.owner_name}, –≤–∞—à —Ä–∞—Ö—É–Ω–æ–∫ –ø–æ–ø–æ–≤–Ω–µ–Ω–æ –Ω–∞ {amount:.2f}‚Ç¨.")
        else:
            print("‚ùå –°—É–º–∞ –¥–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0.")

    def withdraw(self, amount):
        """–ó–Ω—è—Ç—Ç—è –∫–æ—à—Ç—ñ–≤"""
        if amount <= 0:
            print("‚ùå –°—É–º–∞ –¥–ª—è –∑–Ω—è—Ç—Ç—è –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0.")
        elif amount > self.balance:
            print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É {self.account_number}.")
        else:
            self.balance -= amount
            print(f"üí∏ {self.owner_name}, –∑–Ω—è—Ç–æ {amount:.2f}‚Ç¨. –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: {self.balance:.2f}‚Ç¨")

    def __str__(self):
        return f"–†–∞—Ö—É–Ω–æ–∫ ‚Ññ{self.account_number} | –í–ª–∞—Å–Ω–∏–∫: {self.owner_name} | –ë–∞–ª–∞–Ω—Å: {self.balance:.2f}‚Ç¨"


class Bank:
    def __init__(self, name):
        self.name = name
        self.accounts = []

    def create_account(self, owner_name, account_number, initial_balance=0.0):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É"""
        account = BankAccount(owner_name, account_number, initial_balance)
        self.accounts.append(account)
        print(f"üè¶ –†–∞—Ö—É–Ω–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è {owner_name} (‚Ññ{account_number}).")
        return account

    def find_account(self, account_number):
        """–ü–æ—à—É–∫ —Ä–∞—Ö—É–Ω–∫—É –∑–∞ –Ω–æ–º–µ—Ä–æ–º"""
        for acc in self.accounts:
            if acc.account_number == account_number:
                return acc
        return None

    def transfer(self, from_acc_number, to_acc_number, amount):
        """–ü–µ—Ä–µ–∫–∞–∑ –∫–æ—à—Ç—ñ–≤ –º—ñ–∂ —Ä–∞—Ö—É–Ω–∫–∞–º–∏"""
        from_acc = self.find_account(from_acc_number)
        to_acc = self.find_account(to_acc_number)

        if not from_acc or not to_acc:
            print("‚ùå –û–¥–∏–Ω —ñ–∑ —Ä–∞—Ö—É–Ω–∫—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        if from_acc.balance < amount:
            print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É {from_acc.account_number}.")
            return

        if amount <= 0:
            print("‚ùå –°—É–º–∞ –ø–µ—Ä–µ–∫–∞–∑—É –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0.")
            return

        from_acc.balance -= amount
        to_acc.balance += amount
        print(f"üîÅ –ü–µ—Ä–µ–∫–∞–∑–∞–Ω–æ {amount:.2f}‚Ç¨ –∑ —Ä–∞—Ö—É–Ω–∫—É ‚Ññ{from_acc_number} –Ω–∞ ‚Ññ{to_acc_number}.")

    def show_all_accounts(self):
        """–í–∏–≤–µ—Å—Ç–∏ –≤—Å—ñ —Ä–∞—Ö—É–Ω–∫–∏ –≤ –±–∞–Ω–∫—É"""
        print(f"\n=== –°–ø–∏—Å–æ–∫ —Ä–∞—Ö—É–Ω–∫—ñ–≤ —É –±–∞–Ω–∫—É '{self.name}' ===")
        for acc in self.accounts:
            print(acc)


# === –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ===

    # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–Ω–∫
my_bank = Bank("Bank of Python")

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–∞—Ö—É–Ω–∫–∏
acc1 = my_bank.create_account("–ê—Ä—Ç–µ–º", "UA001", 500)
acc2 = my_bank.create_account("–û–ª–µ–Ω–∞", "UA002", 300)

    # –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–∞ –∑–Ω—è—Ç—Ç—è –∫–æ—à—Ç—ñ–≤
acc1.deposit(200)
acc2.withdraw(100)

    # –ü–µ—Ä–µ–∫–∞–∑ –º—ñ–∂ —Ä–∞—Ö—É–Ω–∫–∞–º–∏
my_bank.transfer("UA001", "UA002", 250)

    # –í–∏–≤—ñ–¥ —É—Å—ñ—Ö —Ä–∞—Ö—É–Ω–∫—ñ–≤
my_bank.show_all_accounts()

